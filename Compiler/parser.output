Terminals unused in grammar

    SCAN_ERR
    TOKEN_EOF


Grammar

    0 $accept: program $end

    1 program: procedures_decl main

    2 procedures_decl: procedures_decl PROCEDURE ident proc_head IS VAR decl X_BEGIN maybe_stmts END
    3                | procedures_decl PROCEDURE ident proc_head IS X_BEGIN maybe_stmts END
    4                | ε

    5 proc_head: LPR declH RPR

    6 proc_headSTMT: LPR declSTMT RPR

    7 declSTMT: identE COMMA declSTMT
    8         | identE

    9 declH: ident COMMA declH
   10      | ident

   11 decl: ident COMMA decl
   12     | ident

   13 main: PROGRAM IS VAR decl X_BEGIN maybe_stmts END
   14     | PROGRAM IS X_BEGIN maybe_stmts END

   15 stmt: expr
   16     | if_stmt
   17     | read_stmt
   18     | write_stmt
   19     | while_stmt
   20     | repeat_stmt
   21     | function_head_stmt

   22 if_stmt: IF expr THEN maybe_stmts ELSE maybe_stmts ENDIF
   23        | IF expr THEN maybe_stmts ENDIF

   24 read_stmt: READ atom SEMICOLON

   25 write_stmt: WRITE atom SEMICOLON

   26 while_stmt: WHILE expr DO maybe_stmts ENDWHILE

   27 repeat_stmt: REPEAT maybe_stmts UNTIL expr SEMICOLON

   28 function_head_stmt: ident proc_headSTMT SEMICOLON

   29 maybe_stmts: ε
   30            | stmt maybe_stmts

   31 expr: expr6

   32 expr6: atom ASSIGN expr5 SEMICOLON
   33      | expr5

   34 expr5: expr5 LT expr4
   35      | expr5 LEQ expr4
   36      | expr5 GT expr4
   37      | expr5 GEQ expr4
   38      | expr5 EQ expr4
   39      | expr5 NEQ expr4
   40      | expr4

   41 expr4: expr4 ADD expr3
   42      | expr4 SUB expr3
   43      | expr3

   44 expr3: expr3 MUL expr1
   45      | expr3 DIV expr1
   46      | expr3 MOD expr1
   47      | expr1

   48 expr1: atom

   49 atom: identE
   50     | INT_LIT

   51 ident: IDENT

   52 identE: IDENT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROCEDURE (258) 2 3
    IS (259) 2 3 13 14
    VAR (260) 2 13
    X_BEGIN (261) 2 3 13 14
    END (262) 2 3 13 14
    PROGRAM (263) 13 14
    IF (264) 22 23
    THEN (265) 22 23
    ELSE (266) 22
    ENDIF (267) 22 23
    WHILE (268) 26
    DO (269) 26
    ENDWHILE (270) 26
    REPEAT (271) 27
    UNTIL (272) 27
    READ (273) 24
    WRITE (274) 25
    LPR (275) 5 6
    RPR (276) 5 6
    ASSIGN (277) 32
    COMMA (278) 7 9 11
    SEMICOLON (279) 24 25 27 28 32
    EQ (280) 38
    NEQ (281) 39
    GT (282) 36
    LT (283) 34
    LEQ (284) 35
    GEQ (285) 37
    ADD (286) 41
    SUB (287) 42
    MUL (288) 44
    DIV (289) 45
    MOD (290) 46
    IDENT <ident> (291) 51 52
    INT_LIT (292) 50
    SCAN_ERR (293)
    TOKEN_EOF (294)


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    program <decl> (41)
        on left: 1
        on right: 0
    procedures_decl <decl> (42)
        on left: 2 3 4
        on right: 1 2 3
    proc_head <type> (43)
        on left: 5
        on right: 2 3
    proc_headSTMT <type> (44)
        on left: 6
        on right: 28
    declSTMT <decl> (45)
        on left: 7 8
        on right: 6 7
    declH <decl> (46)
        on left: 9 10
        on right: 5 9
    decl <decl> (47)
        on left: 11 12
        on right: 2 11 13
    main <decl> (48)
        on left: 13 14
        on right: 1
    stmt <stmt> (49)
        on left: 15 16 17 18 19 20 21
        on right: 30
    if_stmt <stmt> (50)
        on left: 22 23
        on right: 16
    read_stmt <expr> (51)
        on left: 24
        on right: 17
    write_stmt <stmt> (52)
        on left: 25
        on right: 18
    while_stmt <stmt> (53)
        on left: 26
        on right: 19
    repeat_stmt <stmt> (54)
        on left: 27
        on right: 20
    function_head_stmt <stmt> (55)
        on left: 28
        on right: 21
    maybe_stmts <stmt> (56)
        on left: 29 30
        on right: 2 3 13 14 22 23 26 27 30
    expr <expr> (57)
        on left: 31
        on right: 15 22 23 26 27
    expr6 <expr> (58)
        on left: 32 33
        on right: 31
    expr5 <expr> (59)
        on left: 34 35 36 37 38 39 40
        on right: 32 33 34 35 36 37 38 39
    expr4 <expr> (60)
        on left: 41 42 43
        on right: 34 35 36 37 38 39 40 41 42
    expr3 <expr> (61)
        on left: 44 45 46 47
        on right: 41 42 43 44 45 46
    expr1 <expr> (62)
        on left: 48
        on right: 44 45 46 47
    atom <expr> (63)
        on left: 49 50
        on right: 24 25 32 48
    ident <ident> (64)
        on left: 51
        on right: 2 3 9 10 11 12 28
    identE <ident> (65)
        on left: 52
        on right: 7 8 49


State 0

    0 $accept: • program $end

    $default  reduce using rule 4 (procedures_decl)

    program          go to state 1
    procedures_decl  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: procedures_decl • main
    2 procedures_decl: procedures_decl • PROCEDURE ident proc_head IS VAR decl X_BEGIN maybe_stmts END
    3                | procedures_decl • PROCEDURE ident proc_head IS X_BEGIN maybe_stmts END

    PROCEDURE  shift, and go to state 4
    PROGRAM    shift, and go to state 5

    main  go to state 6


State 3

    0 $accept: program $end •

    $default  accept


State 4

    2 procedures_decl: procedures_decl PROCEDURE • ident proc_head IS VAR decl X_BEGIN maybe_stmts END
    3                | procedures_decl PROCEDURE • ident proc_head IS X_BEGIN maybe_stmts END

    IDENT  shift, and go to state 7

    ident  go to state 8


State 5

   13 main: PROGRAM • IS VAR decl X_BEGIN maybe_stmts END
   14     | PROGRAM • IS X_BEGIN maybe_stmts END

    IS  shift, and go to state 9


State 6

    1 program: procedures_decl main •

    $default  reduce using rule 1 (program)


State 7

   51 ident: IDENT •

    $default  reduce using rule 51 (ident)


State 8

    2 procedures_decl: procedures_decl PROCEDURE ident • proc_head IS VAR decl X_BEGIN maybe_stmts END
    3                | procedures_decl PROCEDURE ident • proc_head IS X_BEGIN maybe_stmts END

    LPR  shift, and go to state 10

    proc_head  go to state 11


State 9

   13 main: PROGRAM IS • VAR decl X_BEGIN maybe_stmts END
   14     | PROGRAM IS • X_BEGIN maybe_stmts END

    VAR      shift, and go to state 12
    X_BEGIN  shift, and go to state 13


State 10

    5 proc_head: LPR • declH RPR

    IDENT  shift, and go to state 7

    declH  go to state 14
    ident  go to state 15


State 11

    2 procedures_decl: procedures_decl PROCEDURE ident proc_head • IS VAR decl X_BEGIN maybe_stmts END
    3                | procedures_decl PROCEDURE ident proc_head • IS X_BEGIN maybe_stmts END

    IS  shift, and go to state 16


State 12

   13 main: PROGRAM IS VAR • decl X_BEGIN maybe_stmts END

    IDENT  shift, and go to state 7

    decl   go to state 17
    ident  go to state 18


State 13

   14 main: PROGRAM IS X_BEGIN • maybe_stmts END

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    REPEAT   shift, and go to state 21
    READ     shift, and go to state 22
    WRITE    shift, and go to state 23
    IDENT    shift, and go to state 24
    INT_LIT  shift, and go to state 25

    $default  reduce using rule 29 (maybe_stmts)

    stmt                go to state 26
    if_stmt             go to state 27
    read_stmt           go to state 28
    write_stmt          go to state 29
    while_stmt          go to state 30
    repeat_stmt         go to state 31
    function_head_stmt  go to state 32
    maybe_stmts         go to state 33
    expr                go to state 34
    expr6               go to state 35
    expr5               go to state 36
    expr4               go to state 37
    expr3               go to state 38
    expr1               go to state 39
    atom                go to state 40
    ident               go to state 41
    identE              go to state 42


State 14

    5 proc_head: LPR declH • RPR

    RPR  shift, and go to state 43


State 15

    9 declH: ident • COMMA declH
   10      | ident •

    COMMA  shift, and go to state 44

    $default  reduce using rule 10 (declH)


State 16

    2 procedures_decl: procedures_decl PROCEDURE ident proc_head IS • VAR decl X_BEGIN maybe_stmts END
    3                | procedures_decl PROCEDURE ident proc_head IS • X_BEGIN maybe_stmts END

    VAR      shift, and go to state 45
    X_BEGIN  shift, and go to state 46


State 17

   13 main: PROGRAM IS VAR decl • X_BEGIN maybe_stmts END

    X_BEGIN  shift, and go to state 47


State 18

   11 decl: ident • COMMA decl
   12     | ident •

    COMMA  shift, and go to state 48

    $default  reduce using rule 12 (decl)


State 19

   22 if_stmt: IF • expr THEN maybe_stmts ELSE maybe_stmts ENDIF
   23        | IF • expr THEN maybe_stmts ENDIF

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr    go to state 50
    expr6   go to state 35
    expr5   go to state 36
    expr4   go to state 37
    expr3   go to state 38
    expr1   go to state 39
    atom    go to state 40
    identE  go to state 42


State 20

   26 while_stmt: WHILE • expr DO maybe_stmts ENDWHILE

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr    go to state 51
    expr6   go to state 35
    expr5   go to state 36
    expr4   go to state 37
    expr3   go to state 38
    expr1   go to state 39
    atom    go to state 40
    identE  go to state 42


State 21

   27 repeat_stmt: REPEAT • maybe_stmts UNTIL expr SEMICOLON

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    REPEAT   shift, and go to state 21
    READ     shift, and go to state 22
    WRITE    shift, and go to state 23
    IDENT    shift, and go to state 24
    INT_LIT  shift, and go to state 25

    $default  reduce using rule 29 (maybe_stmts)

    stmt                go to state 26
    if_stmt             go to state 27
    read_stmt           go to state 28
    write_stmt          go to state 29
    while_stmt          go to state 30
    repeat_stmt         go to state 31
    function_head_stmt  go to state 32
    maybe_stmts         go to state 52
    expr                go to state 34
    expr6               go to state 35
    expr5               go to state 36
    expr4               go to state 37
    expr3               go to state 38
    expr1               go to state 39
    atom                go to state 40
    ident               go to state 41
    identE              go to state 42


State 22

   24 read_stmt: READ • atom SEMICOLON

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    atom    go to state 53
    identE  go to state 42


State 23

   25 write_stmt: WRITE • atom SEMICOLON

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    atom    go to state 54
    identE  go to state 42


State 24

   51 ident: IDENT •
   52 identE: IDENT •

    LPR       reduce using rule 51 (ident)
    $default  reduce using rule 52 (identE)


State 25

   50 atom: INT_LIT •

    $default  reduce using rule 50 (atom)


State 26

   30 maybe_stmts: stmt • maybe_stmts

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    REPEAT   shift, and go to state 21
    READ     shift, and go to state 22
    WRITE    shift, and go to state 23
    IDENT    shift, and go to state 24
    INT_LIT  shift, and go to state 25

    $default  reduce using rule 29 (maybe_stmts)

    stmt                go to state 26
    if_stmt             go to state 27
    read_stmt           go to state 28
    write_stmt          go to state 29
    while_stmt          go to state 30
    repeat_stmt         go to state 31
    function_head_stmt  go to state 32
    maybe_stmts         go to state 55
    expr                go to state 34
    expr6               go to state 35
    expr5               go to state 36
    expr4               go to state 37
    expr3               go to state 38
    expr1               go to state 39
    atom                go to state 40
    ident               go to state 41
    identE              go to state 42


State 27

   16 stmt: if_stmt •

    $default  reduce using rule 16 (stmt)


State 28

   17 stmt: read_stmt •

    $default  reduce using rule 17 (stmt)


State 29

   18 stmt: write_stmt •

    $default  reduce using rule 18 (stmt)


State 30

   19 stmt: while_stmt •

    $default  reduce using rule 19 (stmt)


State 31

   20 stmt: repeat_stmt •

    $default  reduce using rule 20 (stmt)


State 32

   21 stmt: function_head_stmt •

    $default  reduce using rule 21 (stmt)


State 33

   14 main: PROGRAM IS X_BEGIN maybe_stmts • END

    END  shift, and go to state 56


State 34

   15 stmt: expr •

    $default  reduce using rule 15 (stmt)


State 35

   31 expr: expr6 •

    $default  reduce using rule 31 (expr)


State 36

   33 expr6: expr5 •
   34 expr5: expr5 • LT expr4
   35      | expr5 • LEQ expr4
   36      | expr5 • GT expr4
   37      | expr5 • GEQ expr4
   38      | expr5 • EQ expr4
   39      | expr5 • NEQ expr4

    EQ   shift, and go to state 57
    NEQ  shift, and go to state 58
    GT   shift, and go to state 59
    LT   shift, and go to state 60
    LEQ  shift, and go to state 61
    GEQ  shift, and go to state 62

    $default  reduce using rule 33 (expr6)


State 37

   40 expr5: expr4 •
   41 expr4: expr4 • ADD expr3
   42      | expr4 • SUB expr3

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64

    $default  reduce using rule 40 (expr5)


State 38

   43 expr4: expr3 •
   44 expr3: expr3 • MUL expr1
   45      | expr3 • DIV expr1
   46      | expr3 • MOD expr1

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67

    $default  reduce using rule 43 (expr4)


State 39

   47 expr3: expr1 •

    $default  reduce using rule 47 (expr3)


State 40

   32 expr6: atom • ASSIGN expr5 SEMICOLON
   48 expr1: atom •

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 48 (expr1)


State 41

   28 function_head_stmt: ident • proc_headSTMT SEMICOLON

    LPR  shift, and go to state 69

    proc_headSTMT  go to state 70


State 42

   49 atom: identE •

    $default  reduce using rule 49 (atom)


State 43

    5 proc_head: LPR declH RPR •

    $default  reduce using rule 5 (proc_head)


State 44

    9 declH: ident COMMA • declH

    IDENT  shift, and go to state 7

    declH  go to state 71
    ident  go to state 15


State 45

    2 procedures_decl: procedures_decl PROCEDURE ident proc_head IS VAR • decl X_BEGIN maybe_stmts END

    IDENT  shift, and go to state 7

    decl   go to state 72
    ident  go to state 18


State 46

    3 procedures_decl: procedures_decl PROCEDURE ident proc_head IS X_BEGIN • maybe_stmts END

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    REPEAT   shift, and go to state 21
    READ     shift, and go to state 22
    WRITE    shift, and go to state 23
    IDENT    shift, and go to state 24
    INT_LIT  shift, and go to state 25

    $default  reduce using rule 29 (maybe_stmts)

    stmt                go to state 26
    if_stmt             go to state 27
    read_stmt           go to state 28
    write_stmt          go to state 29
    while_stmt          go to state 30
    repeat_stmt         go to state 31
    function_head_stmt  go to state 32
    maybe_stmts         go to state 73
    expr                go to state 34
    expr6               go to state 35
    expr5               go to state 36
    expr4               go to state 37
    expr3               go to state 38
    expr1               go to state 39
    atom                go to state 40
    ident               go to state 41
    identE              go to state 42


State 47

   13 main: PROGRAM IS VAR decl X_BEGIN • maybe_stmts END

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    REPEAT   shift, and go to state 21
    READ     shift, and go to state 22
    WRITE    shift, and go to state 23
    IDENT    shift, and go to state 24
    INT_LIT  shift, and go to state 25

    $default  reduce using rule 29 (maybe_stmts)

    stmt                go to state 26
    if_stmt             go to state 27
    read_stmt           go to state 28
    write_stmt          go to state 29
    while_stmt          go to state 30
    repeat_stmt         go to state 31
    function_head_stmt  go to state 32
    maybe_stmts         go to state 74
    expr                go to state 34
    expr6               go to state 35
    expr5               go to state 36
    expr4               go to state 37
    expr3               go to state 38
    expr1               go to state 39
    atom                go to state 40
    ident               go to state 41
    identE              go to state 42


State 48

   11 decl: ident COMMA • decl

    IDENT  shift, and go to state 7

    decl   go to state 75
    ident  go to state 18


State 49

   52 identE: IDENT •

    $default  reduce using rule 52 (identE)


State 50

   22 if_stmt: IF expr • THEN maybe_stmts ELSE maybe_stmts ENDIF
   23        | IF expr • THEN maybe_stmts ENDIF

    THEN  shift, and go to state 76


State 51

   26 while_stmt: WHILE expr • DO maybe_stmts ENDWHILE

    DO  shift, and go to state 77


State 52

   27 repeat_stmt: REPEAT maybe_stmts • UNTIL expr SEMICOLON

    UNTIL  shift, and go to state 78


State 53

   24 read_stmt: READ atom • SEMICOLON

    SEMICOLON  shift, and go to state 79


State 54

   25 write_stmt: WRITE atom • SEMICOLON

    SEMICOLON  shift, and go to state 80


State 55

   30 maybe_stmts: stmt maybe_stmts •

    $default  reduce using rule 30 (maybe_stmts)


State 56

   14 main: PROGRAM IS X_BEGIN maybe_stmts END •

    $default  reduce using rule 14 (main)


State 57

   38 expr5: expr5 EQ • expr4

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr4   go to state 81
    expr3   go to state 38
    expr1   go to state 39
    atom    go to state 82
    identE  go to state 42


State 58

   39 expr5: expr5 NEQ • expr4

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr4   go to state 83
    expr3   go to state 38
    expr1   go to state 39
    atom    go to state 82
    identE  go to state 42


State 59

   36 expr5: expr5 GT • expr4

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr4   go to state 84
    expr3   go to state 38
    expr1   go to state 39
    atom    go to state 82
    identE  go to state 42


State 60

   34 expr5: expr5 LT • expr4

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr4   go to state 85
    expr3   go to state 38
    expr1   go to state 39
    atom    go to state 82
    identE  go to state 42


State 61

   35 expr5: expr5 LEQ • expr4

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr4   go to state 86
    expr3   go to state 38
    expr1   go to state 39
    atom    go to state 82
    identE  go to state 42


State 62

   37 expr5: expr5 GEQ • expr4

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr4   go to state 87
    expr3   go to state 38
    expr1   go to state 39
    atom    go to state 82
    identE  go to state 42


State 63

   41 expr4: expr4 ADD • expr3

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr3   go to state 88
    expr1   go to state 39
    atom    go to state 82
    identE  go to state 42


State 64

   42 expr4: expr4 SUB • expr3

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr3   go to state 89
    expr1   go to state 39
    atom    go to state 82
    identE  go to state 42


State 65

   44 expr3: expr3 MUL • expr1

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr1   go to state 90
    atom    go to state 82
    identE  go to state 42


State 66

   45 expr3: expr3 DIV • expr1

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr1   go to state 91
    atom    go to state 82
    identE  go to state 42


State 67

   46 expr3: expr3 MOD • expr1

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr1   go to state 92
    atom    go to state 82
    identE  go to state 42


State 68

   32 expr6: atom ASSIGN • expr5 SEMICOLON

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr5   go to state 93
    expr4   go to state 37
    expr3   go to state 38
    expr1   go to state 39
    atom    go to state 82
    identE  go to state 42


State 69

    6 proc_headSTMT: LPR • declSTMT RPR

    IDENT  shift, and go to state 49

    declSTMT  go to state 94
    identE    go to state 95


State 70

   28 function_head_stmt: ident proc_headSTMT • SEMICOLON

    SEMICOLON  shift, and go to state 96


State 71

    9 declH: ident COMMA declH •

    $default  reduce using rule 9 (declH)


State 72

    2 procedures_decl: procedures_decl PROCEDURE ident proc_head IS VAR decl • X_BEGIN maybe_stmts END

    X_BEGIN  shift, and go to state 97


State 73

    3 procedures_decl: procedures_decl PROCEDURE ident proc_head IS X_BEGIN maybe_stmts • END

    END  shift, and go to state 98


State 74

   13 main: PROGRAM IS VAR decl X_BEGIN maybe_stmts • END

    END  shift, and go to state 99


State 75

   11 decl: ident COMMA decl •

    $default  reduce using rule 11 (decl)


State 76

   22 if_stmt: IF expr THEN • maybe_stmts ELSE maybe_stmts ENDIF
   23        | IF expr THEN • maybe_stmts ENDIF

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    REPEAT   shift, and go to state 21
    READ     shift, and go to state 22
    WRITE    shift, and go to state 23
    IDENT    shift, and go to state 24
    INT_LIT  shift, and go to state 25

    $default  reduce using rule 29 (maybe_stmts)

    stmt                go to state 26
    if_stmt             go to state 27
    read_stmt           go to state 28
    write_stmt          go to state 29
    while_stmt          go to state 30
    repeat_stmt         go to state 31
    function_head_stmt  go to state 32
    maybe_stmts         go to state 100
    expr                go to state 34
    expr6               go to state 35
    expr5               go to state 36
    expr4               go to state 37
    expr3               go to state 38
    expr1               go to state 39
    atom                go to state 40
    ident               go to state 41
    identE              go to state 42


State 77

   26 while_stmt: WHILE expr DO • maybe_stmts ENDWHILE

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    REPEAT   shift, and go to state 21
    READ     shift, and go to state 22
    WRITE    shift, and go to state 23
    IDENT    shift, and go to state 24
    INT_LIT  shift, and go to state 25

    $default  reduce using rule 29 (maybe_stmts)

    stmt                go to state 26
    if_stmt             go to state 27
    read_stmt           go to state 28
    write_stmt          go to state 29
    while_stmt          go to state 30
    repeat_stmt         go to state 31
    function_head_stmt  go to state 32
    maybe_stmts         go to state 101
    expr                go to state 34
    expr6               go to state 35
    expr5               go to state 36
    expr4               go to state 37
    expr3               go to state 38
    expr1               go to state 39
    atom                go to state 40
    ident               go to state 41
    identE              go to state 42


State 78

   27 repeat_stmt: REPEAT maybe_stmts UNTIL • expr SEMICOLON

    IDENT    shift, and go to state 49
    INT_LIT  shift, and go to state 25

    expr    go to state 102
    expr6   go to state 35
    expr5   go to state 36
    expr4   go to state 37
    expr3   go to state 38
    expr1   go to state 39
    atom    go to state 40
    identE  go to state 42


State 79

   24 read_stmt: READ atom SEMICOLON •

    $default  reduce using rule 24 (read_stmt)


State 80

   25 write_stmt: WRITE atom SEMICOLON •

    $default  reduce using rule 25 (write_stmt)


State 81

   38 expr5: expr5 EQ expr4 •
   41 expr4: expr4 • ADD expr3
   42      | expr4 • SUB expr3

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64

    $default  reduce using rule 38 (expr5)


State 82

   48 expr1: atom •

    $default  reduce using rule 48 (expr1)


State 83

   39 expr5: expr5 NEQ expr4 •
   41 expr4: expr4 • ADD expr3
   42      | expr4 • SUB expr3

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64

    $default  reduce using rule 39 (expr5)


State 84

   36 expr5: expr5 GT expr4 •
   41 expr4: expr4 • ADD expr3
   42      | expr4 • SUB expr3

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64

    $default  reduce using rule 36 (expr5)


State 85

   34 expr5: expr5 LT expr4 •
   41 expr4: expr4 • ADD expr3
   42      | expr4 • SUB expr3

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64

    $default  reduce using rule 34 (expr5)


State 86

   35 expr5: expr5 LEQ expr4 •
   41 expr4: expr4 • ADD expr3
   42      | expr4 • SUB expr3

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64

    $default  reduce using rule 35 (expr5)


State 87

   37 expr5: expr5 GEQ expr4 •
   41 expr4: expr4 • ADD expr3
   42      | expr4 • SUB expr3

    ADD  shift, and go to state 63
    SUB  shift, and go to state 64

    $default  reduce using rule 37 (expr5)


State 88

   41 expr4: expr4 ADD expr3 •
   44 expr3: expr3 • MUL expr1
   45      | expr3 • DIV expr1
   46      | expr3 • MOD expr1

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67

    $default  reduce using rule 41 (expr4)


State 89

   42 expr4: expr4 SUB expr3 •
   44 expr3: expr3 • MUL expr1
   45      | expr3 • DIV expr1
   46      | expr3 • MOD expr1

    MUL  shift, and go to state 65
    DIV  shift, and go to state 66
    MOD  shift, and go to state 67

    $default  reduce using rule 42 (expr4)


State 90

   44 expr3: expr3 MUL expr1 •

    $default  reduce using rule 44 (expr3)


State 91

   45 expr3: expr3 DIV expr1 •

    $default  reduce using rule 45 (expr3)


State 92

   46 expr3: expr3 MOD expr1 •

    $default  reduce using rule 46 (expr3)


State 93

   32 expr6: atom ASSIGN expr5 • SEMICOLON
   34 expr5: expr5 • LT expr4
   35      | expr5 • LEQ expr4
   36      | expr5 • GT expr4
   37      | expr5 • GEQ expr4
   38      | expr5 • EQ expr4
   39      | expr5 • NEQ expr4

    SEMICOLON  shift, and go to state 103
    EQ         shift, and go to state 57
    NEQ        shift, and go to state 58
    GT         shift, and go to state 59
    LT         shift, and go to state 60
    LEQ        shift, and go to state 61
    GEQ        shift, and go to state 62


State 94

    6 proc_headSTMT: LPR declSTMT • RPR

    RPR  shift, and go to state 104


State 95

    7 declSTMT: identE • COMMA declSTMT
    8         | identE •

    COMMA  shift, and go to state 105

    $default  reduce using rule 8 (declSTMT)


State 96

   28 function_head_stmt: ident proc_headSTMT SEMICOLON •

    $default  reduce using rule 28 (function_head_stmt)


State 97

    2 procedures_decl: procedures_decl PROCEDURE ident proc_head IS VAR decl X_BEGIN • maybe_stmts END

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    REPEAT   shift, and go to state 21
    READ     shift, and go to state 22
    WRITE    shift, and go to state 23
    IDENT    shift, and go to state 24
    INT_LIT  shift, and go to state 25

    $default  reduce using rule 29 (maybe_stmts)

    stmt                go to state 26
    if_stmt             go to state 27
    read_stmt           go to state 28
    write_stmt          go to state 29
    while_stmt          go to state 30
    repeat_stmt         go to state 31
    function_head_stmt  go to state 32
    maybe_stmts         go to state 106
    expr                go to state 34
    expr6               go to state 35
    expr5               go to state 36
    expr4               go to state 37
    expr3               go to state 38
    expr1               go to state 39
    atom                go to state 40
    ident               go to state 41
    identE              go to state 42


State 98

    3 procedures_decl: procedures_decl PROCEDURE ident proc_head IS X_BEGIN maybe_stmts END •

    $default  reduce using rule 3 (procedures_decl)


State 99

   13 main: PROGRAM IS VAR decl X_BEGIN maybe_stmts END •

    $default  reduce using rule 13 (main)


State 100

   22 if_stmt: IF expr THEN maybe_stmts • ELSE maybe_stmts ENDIF
   23        | IF expr THEN maybe_stmts • ENDIF

    ELSE   shift, and go to state 107
    ENDIF  shift, and go to state 108


State 101

   26 while_stmt: WHILE expr DO maybe_stmts • ENDWHILE

    ENDWHILE  shift, and go to state 109


State 102

   27 repeat_stmt: REPEAT maybe_stmts UNTIL expr • SEMICOLON

    SEMICOLON  shift, and go to state 110


State 103

   32 expr6: atom ASSIGN expr5 SEMICOLON •

    $default  reduce using rule 32 (expr6)


State 104

    6 proc_headSTMT: LPR declSTMT RPR •

    $default  reduce using rule 6 (proc_headSTMT)


State 105

    7 declSTMT: identE COMMA • declSTMT

    IDENT  shift, and go to state 49

    declSTMT  go to state 111
    identE    go to state 95


State 106

    2 procedures_decl: procedures_decl PROCEDURE ident proc_head IS VAR decl X_BEGIN maybe_stmts • END

    END  shift, and go to state 112


State 107

   22 if_stmt: IF expr THEN maybe_stmts ELSE • maybe_stmts ENDIF

    IF       shift, and go to state 19
    WHILE    shift, and go to state 20
    REPEAT   shift, and go to state 21
    READ     shift, and go to state 22
    WRITE    shift, and go to state 23
    IDENT    shift, and go to state 24
    INT_LIT  shift, and go to state 25

    $default  reduce using rule 29 (maybe_stmts)

    stmt                go to state 26
    if_stmt             go to state 27
    read_stmt           go to state 28
    write_stmt          go to state 29
    while_stmt          go to state 30
    repeat_stmt         go to state 31
    function_head_stmt  go to state 32
    maybe_stmts         go to state 113
    expr                go to state 34
    expr6               go to state 35
    expr5               go to state 36
    expr4               go to state 37
    expr3               go to state 38
    expr1               go to state 39
    atom                go to state 40
    ident               go to state 41
    identE              go to state 42


State 108

   23 if_stmt: IF expr THEN maybe_stmts ENDIF •

    $default  reduce using rule 23 (if_stmt)


State 109

   26 while_stmt: WHILE expr DO maybe_stmts ENDWHILE •

    $default  reduce using rule 26 (while_stmt)


State 110

   27 repeat_stmt: REPEAT maybe_stmts UNTIL expr SEMICOLON •

    $default  reduce using rule 27 (repeat_stmt)


State 111

    7 declSTMT: identE COMMA declSTMT •

    $default  reduce using rule 7 (declSTMT)


State 112

    2 procedures_decl: procedures_decl PROCEDURE ident proc_head IS VAR decl X_BEGIN maybe_stmts END •

    $default  reduce using rule 2 (procedures_decl)


State 113

   22 if_stmt: IF expr THEN maybe_stmts ELSE maybe_stmts • ENDIF

    ENDIF  shift, and go to state 114


State 114

   22 if_stmt: IF expr THEN maybe_stmts ELSE maybe_stmts ENDIF •

    $default  reduce using rule 22 (if_stmt)
